/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ActualitS as PrismaActualitS } from "@prisma/client";

export class ActualitSServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ActualitSCountArgs, "select">
  ): Promise<number> {
    return this.prisma.actualitS.count(args);
  }

  async actualitSItems(
    args: Prisma.ActualitSFindManyArgs
  ): Promise<PrismaActualitS[]> {
    return this.prisma.actualitS.findMany(args);
  }
  async actualitS(
    args: Prisma.ActualitSFindUniqueArgs
  ): Promise<PrismaActualitS | null> {
    return this.prisma.actualitS.findUnique(args);
  }
  async createActualitS(
    args: Prisma.ActualitSCreateArgs
  ): Promise<PrismaActualitS> {
    return this.prisma.actualitS.create(args);
  }
  async updateActualitS(
    args: Prisma.ActualitSUpdateArgs
  ): Promise<PrismaActualitS> {
    return this.prisma.actualitS.update(args);
  }
  async deleteActualitS(
    args: Prisma.ActualitSDeleteArgs
  ): Promise<PrismaActualitS> {
    return this.prisma.actualitS.delete(args);
  }
}
