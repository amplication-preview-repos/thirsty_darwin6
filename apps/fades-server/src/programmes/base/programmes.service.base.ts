/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Programmes as PrismaProgrammes } from "@prisma/client";

export class ProgrammesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProgrammesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.programmes.count(args);
  }

  async programmesItems(
    args: Prisma.ProgrammesFindManyArgs
  ): Promise<PrismaProgrammes[]> {
    return this.prisma.programmes.findMany(args);
  }
  async programmes(
    args: Prisma.ProgrammesFindUniqueArgs
  ): Promise<PrismaProgrammes | null> {
    return this.prisma.programmes.findUnique(args);
  }
  async createProgrammes(
    args: Prisma.ProgrammesCreateArgs
  ): Promise<PrismaProgrammes> {
    return this.prisma.programmes.create(args);
  }
  async updateProgrammes(
    args: Prisma.ProgrammesUpdateArgs
  ): Promise<PrismaProgrammes> {
    return this.prisma.programmes.update(args);
  }
  async deleteProgrammes(
    args: Prisma.ProgrammesDeleteArgs
  ): Promise<PrismaProgrammes> {
    return this.prisma.programmes.delete(args);
  }
}
